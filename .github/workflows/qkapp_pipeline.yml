# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and deploy to Azure Kubernetes Service

# env:
#   AZURE_CONTAINER_REGISTRY: MY_REGISTRY_NAME # set this to the name of your container registry
#   PROJECT_NAME: MY_PROJECT_NAME              # set this to your project's name
#   RESOURCE_GROUP: MY_RESOURCE_GROUP          # set this to the resource group containing your AKS cluster
#   CLUSTER_NAME: MY_CLUSTER_NAME              # set this to the name of your AKS cluster
#   REGISTRY_URL: MY_REGISTRY_URL              # set this to the URL of your registry
#   # If you bake using helm:
#   CHART_PATH: MY_HELM_FILE                   # set this to the path to your helm file
#   CHART_OVERRIDE_PATH: MY_OVERRIDE_FILES     # set this to an array of override file paths

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3

#     # - name: Azure Login
#     #   uses: azure/login@89d153571fe9a34ed70fcf9f1d95ab8debea7a73
#     #   with:
#     #     creds: ${{ secrets.AZURE_CREDENTIALS }}
#     - uses: Azure/login@v1
#         with:
#           creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
jobs: 
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # - name: 'Az CLI login'
    #   uses: azure/login@v1
    #   with:
    #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
    - uses: Azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

    - name: 'Run Azure CLI commands'
      run: |
          az account show
          az group list
          pwd 
    # - name: Build image on ACR
    #   uses: azure/CLI@7378ce2ca3c38b4b063feb7a4cbe384fef978055
    #   with:
    #     azcliversion: 2.29.1
    #     inlineScript: |
    #       az configure --defaults acr=${{ env.AZURE_CONTAINER_REGISTRY }}
    #       az acr build -t  -t ${{ env.REGISTRY_URL }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
    
    # - name: Gets K8s context
    #   uses: azure/aks-set-context@4e5aec273183a197b181314721843e047123d9fa
    #   with:
    #       creds: ${{ secrets.AZURE_CREDENTIALS }}
    #       resource-group: ${{ env.RESOURCE_GROUP }}
    #       cluster-name: ${{ env.CLUSTER_NAME }}
    #   id: login

    # - name: Configure deployment
    #   uses: azure/k8s-bake@773b6144a3732e3bf4c78b146a0bb9617b2e016b
    #   with:
    #     renderEngine: 'helm'
    #     helmChart: ${{ env.CHART_PATH }}
    #     overrideFiles: ${{ env.CHART_OVERRIDE_PATH }}
    #     overrides: |     
    #       replicas:2
    #     helm-version: 'latest' 
    #   id: bake

    # - name: Deploys application
    # - uses: Azure/k8s-deploy@c8fbd76ededaad2799c054a9fd5d0fa5d4e9aee4
    #   with:
    #     manifests: ${{ steps.bake.outputs.manifestsBundle }}
    #     images: |
    #       ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.PROJECT_NAME }}:${{ github.sha }}
    #     imagepullsecrets: |
    #       ${{ env.PROJECT_NAME }}
